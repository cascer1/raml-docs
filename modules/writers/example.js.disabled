/*
 *                     Copyright 2017 ISAAC Eindhoven
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy of
 * this software and associated documentation files (the "Software"), to deal in
 * the Software without restriction, including without limitation the rights to
 * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
 * the Software, and to permit persons to whom the Software is furnished to do so,
 * subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
 * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
 * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
 * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
 * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 */

var fs = require("fs");

/**
 * Writer constructor
 * @param Core Core object containing all global settings.
 */
function Example(Core){
  this.c = Core;
}

// Change this to the name of your writer.
// This should be the same as the name of the constructor above
Example.prototype.name = "Example";

/**
 * All writers MUST have a write function
 * This function is called after all parsing has been completed
 *  to write a document using a JSON representation of the API.
 *
 * @param apiJSON JSON representation of the parsed API
 */
Example.prototype.write = function(apiJSON) {
  // TODO: convert apiJSON to something pretty
  var result = "";
  this.writeFile(result);
}

/**
 * All writers MUST have an init function
 * This function is called before writing, and allows the writer
 *  to perform some initialization tasks.
 *
 * For example, this can be used to set up a templating engine
 */
Example.prototype.init = function() {
  // TODO: Initialize writer

  var templateName = this.c.options.template;
}

/**
 * Writers may contain their own functions
 *
 */
Example.prototype.writeFile = function(rendered) {
  fs.writeFile("api.adoc", rendered, function(err) {
    if(err) return console.log(err);
  });
}

module.exports = Example;
